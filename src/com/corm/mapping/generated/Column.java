//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.11.16 at 07:31:27 PM PST 
//


package com.corm.mapping.generated;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;

import com.corm.session.SQLTypes;

import java.lang.reflect.Field; 

/**
 * <p>Java class for column complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="column">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;attribute name="rawType" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="field" type="{http://www.w3.org/2001/XMLSchema}string" default="" />
 *       &lt;attribute name="name" type="{http://www.w3.org/2001/XMLSchema}string" default="" />
 *       &lt;attribute name="length" type="{http://www.w3.org/2001/XMLSchema}int" default="-1" />
 *       &lt;attribute name="nullable" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       &lt;attribute name="unique" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       &lt;attribute name="ignoreFor" type="{http://www.w3.org/2001/XMLSchema}string" default="" />
 *       &lt;attribute name="inject" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       &lt;attribute name="hint" type="{http://www.w3.org/2001/XMLSchema}string" default="" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "column")
public class Column {

    @XmlAttribute(name = "rawType", required = true)
    protected String rawType;
    @XmlAttribute(name = "type")
    protected SQLTypes type;
    @XmlAttribute(name = "field")
    protected String field;
    @XmlAttribute(name = "name")
    protected String name;
    @XmlAttribute(name = "length")
    protected Integer length;
    @XmlAttribute(name = "nullable")
    protected Boolean nullable;
    @XmlAttribute(name = "unique")
    protected Boolean unique;
    @XmlAttribute(name = "ignoreFor")
    protected String ignoreFor;
    @XmlAttribute(name = "inject")
    protected Boolean inject;
    @XmlAttribute(name = "hint")
    protected String hint;

    private int hash;
    private Field classField;
   
    public int hash(){
    	return hash;
    }
    public void hash(int hash){
    	this.hash = hash;
    }
    
    public void classField(Field classField){
    	this.classField = classField;
    }
    
    public Field classField(){
    	return this.classField;
    }
    
    public SQLTypes getType() {
		return type;
	}

	public void setType(SQLTypes type) {
		this.type = type;
	}

	/**
     * Gets the value of the rawType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRawType() {
        return rawType;
    }

    /**
     * Sets the value of the rawType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRawType(String value) {
        this.rawType = value;
    }

    /**
     * Gets the value of the field property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getField() {
        if (field == null) {
            return "";
        } else {
            return field;
        }
    }

    /**
     * Sets the value of the field property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setField(String value) {
        this.field = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        if (name == null) {
            return "";
        } else {
            return name;
        }
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the length property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public int getLength() {
        if (length == null) {
            return -1;
        } else {
            return length;
        }
    }

    /**
     * Sets the value of the length property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setLength(Integer value) {
        this.length = value;
    }

    /**
     * Gets the value of the nullable property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isNullable() {
        if (nullable == null) {
            return false;
        } else {
            return nullable;
        }
    }

    /**
     * Sets the value of the nullable property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setNullable(Boolean value) {
        this.nullable = value;
    }

    /**
     * Gets the value of the unique property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isUnique() {
        if (unique == null) {
            return false;
        } else {
            return unique;
        }
    }

    /**
     * Sets the value of the unique property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setUnique(Boolean value) {
        this.unique = value;
    }

    /**
     * Gets the value of the ignoreFor property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIgnoreFor() {
        if (ignoreFor == null) {
            return "";
        } else {
            return ignoreFor;
        }
    }

    /**
     * Sets the value of the ignoreFor property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIgnoreFor(String value) {
        this.ignoreFor = value;
    }

    /**
     * Gets the value of the inject property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isInject() {
        if (inject == null) {
            return false;
        } else {
            return inject;
        }
    }

    /**
     * Sets the value of the inject property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setInject(Boolean value) {
        this.inject = value;
    }

    /**
     * Gets the value of the hint property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getHint() {
        if (hint == null) {
            return "";
        } else {
            return hint;
        }
    }

    /**
     * Sets the value of the hint property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setHint(String value) {
        this.hint = value;
    }

}
